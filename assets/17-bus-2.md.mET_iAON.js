import{_ as a,o as e,c as p,R as l}from"./chunks/framework.XJWvSVd6.js";const P=JSON.parse('{"title":"07 总线 (3~4)","description":"","frontmatter":{},"headers":[],"relativePath":"17-bus-2.md","filePath":"17-bus-2.md","lastUpdated":1703698178000}'),i={name:"17-bus-2.md"},t=l('<h1 id="_07-总线-3-4" tabindex="-1">07 总线 (3~4) <a class="header-anchor" href="#_07-总线-3-4" aria-label="Permalink to &quot;07 总线 (3\\~4)&quot;">​</a></h1><h2 id="总线定时控制" tabindex="-1">总线定时控制 <a class="header-anchor" href="#总线定时控制" aria-label="Permalink to &quot;总线定时控制&quot;">​</a></h2><p>主机与外设通过总线进行信息交换时，必然存在着时间上的配合和动作的协调问题，否则系统的工作将出现混乱。总线的定时控制方式一般分为同步方式和异步方式。</p><h3 id="同步定时方式" tabindex="-1">同步定时方式 <a class="header-anchor" href="#同步定时方式" aria-label="Permalink to &quot;同步定时方式&quot;">​</a></h3><p>同步定时方式是指系统采用一个统一的时钟信号来协调发送和接收双方的传送定时关系。时钟产生相等的时间间隔，每个间隔构成一个总线周期。在一个总线周期中，发送和接收双方可以进行一次数据传送。由于是在规定的时间段内进行 I/O 操作，所以，发送者不必等待接收者有什么响应，当这个时间段结束后，就自动进行下一个操作。</p><p>同步方式中的时钟频率必须能适应在总线上最长的延迟和最慢的接口的需要。因此，同步方式的效率较低，时间利用也不够合理；同时，也没有办法知道被访问的外设是否已经真正的响应，故可靠性比较低。</p><h3 id="异步定时方式" tabindex="-1">异步定时方式 <a class="header-anchor" href="#异步定时方式" aria-label="Permalink to &quot;异步定时方式&quot;">​</a></h3><p>异步定时方式也称为应答方式。在这种方式下，没有公用的时钟，也没有固定的时间间隔，完全依靠传送双方相互制约的“握手”信号来实现定时控制。</p><p>通常，把交换信息的两个部件或设备分为主设备和从设备，主设备提出交换信息的“请求”信号，经接口传送到从设备；从设备接到主设备的申请后，通过接口向主设备发出“回答”信号，整个“握手”过程就是一问一答地进行的。必须指出，从“请求”到“回答”的时间是由操作的实际时间决定的，而不是由 CPU 的节拍硬性规定的，所以具有很强的灵活性，而且对提高整个计算机系统的工作效率也是有好处的。</p><p>异步控制能保证两个工作速度相差很大的部件或设备间可靠地进行信息交换，自动完成时间的配合；但是控制较同步方式稍复杂一些，成本也会高一些。</p><p>异步方式根据“请求”和“回答”信号的撤消是否互锁，有三种情况：</p><ol><li>不互锁</li><li>半互锁</li><li>全互锁</li></ol><h2 id="总线标准" tabindex="-1">总线标准 <a class="header-anchor" href="#总线标准" aria-label="Permalink to &quot;总线标准&quot;">​</a></h2><p>总线的标准制定通常有两种途径，一种是由具有权威性的国际标准化组织制定并推荐使用的，称为正式标准；另一种是由某个或某几个在业界具有影响力的设备制造商提出，而又被业内其他厂家认可并广泛使用的标准，即所谓事实标准，这些标准可能需要经过一段时间的使用，被厂商提供给有关组织讨论之后才能成为正式标准。</p><h3 id="系统总线标准" tabindex="-1">系统总线标准 <a class="header-anchor" href="#系统总线标准" aria-label="Permalink to &quot;系统总线标准&quot;">​</a></h3><p>通常，微机的系统总线都做成多个插槽的形式，各插槽引脚通过总线连在一起。总线接口引脚的定义、传输速率的设定、驱动能力的限制、信号电平的规定、时序的安排以及信息格式的约定等，都有统一的标准。</p><ol><li><p>PC/XT 总线</p><p>PC/XT 总线是早期 PC/XT 微机所配备的系统总线，是 9 位总线标准。</p></li><li><p>ISA 总线</p><p>ISA 总线在原 PC/XT 总线 62 线的基础上又增加一个 36 线的扩展槽，成为 16 位的总线标准，即工业标准体系结构 ISA。</p></li><li><p>MCA 总线</p><p>32 位微通道结构 MCA 总线，在 PS/2 机上使用。MCA 总线成为标准的 32 位扩展总线系统。</p></li><li><p>EISA 总线</p><p>既与 ISA 兼容，又在许多方面参考了 MCA 设计的总线标准，称为增强的工业标准体系结构 EISA，成为一种与 MCA 相抗衡的总线标准。</p></li><li><p>VL 总线（VESA 局部总线）</p><p>VL 总线的数据宽度为 32 位，其主要优点是：协议简单、传输速率高、能够支持多种硬件的工作。但是，它的规范性、兼容性和扩展性较差。</p></li><li><p>PCI 局部总线</p><p>PCI 局部总线是一种高性能、32 位或 64 位地址数据线复用的总线，它的兼容性好，不受 CPU 品种的限制。</p></li><li><p>AGP</p><p>AGP（图形加速端口）是由 Intel 创建的新总线，专门用作高性能图形及视频支持。AGP 基于 PCI，且 AGP 插槽外形与 PCI 类似，但它有增加的信号，同时在系统中的定位不同，是专门为系统中的视频卡设计的。</p></li><li><p>PCI-Express</p><p>PCI-Express（PCI-E）是最新的总线和接口标准，以取代几乎全部现有的内部总线（包括 AGP 和 PCI），最终实现总线标准的统一。它的主要优势就是数据传输速率高，目前最高可达到 10GB/s 以上，而且还有相当大的发展潜力。PCI-E 有 1X 到 32X 等多种规格，具有非常强的伸缩性，能满足现在和将来一定时间内出现的低速设备和高速设备的需求。</p></li></ol><h3 id="外部总线标准" tabindex="-1">外部总线标准 <a class="header-anchor" href="#外部总线标准" aria-label="Permalink to &quot;外部总线标准&quot;">​</a></h3><ol><li><p>串口和并口</p><p>串口（也称之为通信口或 COM 端口）主要用于需要与系统进行双向通信的设备。这些设备包括调制解调器、鼠标、扫描仪、以及所有向计算机发送信息和从计算机接收信息的其他设备。</p><p>并口一般用于将打印机等设备连接到计算机上。并口之所以被称为并口，是因为它有 8 条数据线，可以通过这 8 条数据线同时发送包含数据的一个字节的所有数据位。</p></li><li><p>USB 接口</p><p>USB（通用串行总线）是一种外设总线标准，它的设计为计算机的外设带来了即插即用功能。USB 的出现不再需要专用的端口，也减少了 I/O 卡的使用（从而也减少了因添加新卡而重新配置系统的需要），大大节省了重要的系统资源。</p><p>USB 是迄今为止最通用的外部接口，可以连接鼠标、键盘、打印机、扫描仪、摄像头、闪存盘、手机、数码相机、移动硬盘、外置光驱、USB 网卡等几乎所有的外部设备。</p></li><li><p>IEEE-1394 接口</p><p>IEEE-1394 也被称为 i.Link 或 FireWire，同 USB 一样，IEEE1394 也支持外设热插拔，并为外设提供电源。</p><p>在 USB2.0 推出后，1394a 接口在速度上的优势就不再明显了。同时现在绝对多数主流的计算机并没有配置 1394 接口，要使用必须要购买相关的接口卡。但是 IEEE-1394 仍然有一定的市场，这是因为它的一个重要优点是不要求连接微机，可以用来直接将数字视频（DV）摄像机连接到 DV-VCR 进行磁带复制或编辑。</p></li><li><p>eSATA 接口</p><p>eSATA 的全称是 ExternalSerial ATA（外部串行 ATA），它是 SATA 接口的外部扩展规范。换言之，eSATA 就是“外置”版的 SATA，它是用来连接外部而非内部 SATA 设备。</p><p>eSATA 是伴随 SATA 接口衍生出来的新一代外置设备接口，eSATA 接口的传输速度相比 USB2.0 有着绝对的优势，而随着 USB3.0 接口的普及，eSATA 接口遇到了挑战。目前来看，eSATA 与 USB3.0 接口在速度上不相上下，但 eSATA 只拥有传输数据的功能，并不能够给设备供电，而 USB3.0 则完全不存在这个问题。</p></li></ol>',19),r=[t];function o(A,s,n,h,S,d){return e(),p("div",null,r)}const _=a(i,[["render",o]]);export{P as __pageData,_ as default};
